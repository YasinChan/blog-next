import{_ as l,r as o,o as c,c as i,a as n,b as s,d as a,w as r,e}from"./app-B9iGP_ub.js";const u={},d=n("h1",{id:"typing-项目技术总结-通用模块-字体切换系列",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#typing-项目技术总结-通用模块-字体切换系列"},[n("span",null,"Typing 项目技术总结 - 通用模块（字体切换系列）")])],-1),k={href:"https://typing.yasinchan.com",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/YasinChan/typing",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[n("img",{src:"https://file.yasinchan.com/Ah4n6YhrHtTazLbAGidp2oNzwttOiUFb/766579006.png",alt:""})],-1),g=n("h2",{id:"切换字体",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#切换字体"},[n("span",null,"切换字体")])],-1),f=n("p",null,"我在互联网上找到了一些免费或者开源的字体网站，从中找到一些个人认为比较适合的字体。比如我这里使用到是如下四个：",-1),_={href:"https://wordshub.github.io/free-font/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://fonts.google.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/atelier-anchor/smiley-sans",target:"_blank",rel:"noopener noreferrer"},y={href:"https://fonts.alibabagroup.com/#/home",target:"_blank",rel:"noopener noreferrer"},w=e(`<p>一般一个完整的字体 <code>ttf 文件</code> 大小在 几 M 到 几十 M 不等，因此这种字体文件我将其放在 CDN 上了。然后通过 css <code>@font-face</code> 进行定义。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;zpix&#39;</span><span class="token punctuation">;</span>
  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;https://file.yasinchan.com/JudectfYr6GWqWPMRw79gEhCdUhozc36/zpix.ttf&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),x={href:"https://www.w3.org/TR/css-fonts-3/?spm=5176.28103460.0.0.297c3f99aJeEs1#font-face-loading",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"font-family",-1),C=n("p",null,[s("然后在上图中点击选择对应字体后，将包含对应 "),n("code",null,"font-family"),s(" 字体样式的 "),n("code",null,"class"),s(" 设置到对应标签上，此时字体文件会被加载，从而达到动态加载字体文件和切换字体的目的。")],-1),q={href:"https://github.com/bramstein/fontfaceobserver",target:"_blank",rel:"noopener noreferrer"},M=e(`<div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">listenFont</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;default&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;默认字体加载成功！&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> <span class="token string">&#39; 字体加载中...&#39;</span><span class="token punctuation">,</span> timeout<span class="token operator">:</span> <span class="token number">8000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> myFont <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FontFaceObserver</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  myFont<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> <span class="token string">&#39; 字体加载成功！&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">showMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span> <span class="token operator">+</span> <span class="token string">&#39; 字体加载失败！&#39;</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token string">&#39;error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可以看到我为 load 方法加了第二个 8000 的参数，原因是该组件库的描述</p><blockquote><p>The default timeout for giving up on font loading is 3 seconds. You can increase or decrease this by passing a number of milliseconds as the second parameter to the load method.</p></blockquote>`,3),N={href:"https://github.com/YasinChan/typing/blob/877a7a77a399bf492c31af0fb7cf9c8280ac20ad/src/App.vue#L169C1-L184C2",target:"_blank",rel:"noopener noreferrer"},T={href:"https://github.com/ecomfe/fontmin",target:"_blank",rel:"noopener noreferrer"},z=n("p",null,[s("另外再说一点，在开发时也考虑过字体资源预加载的方案。这里先引入一个新的概念 "),n("code",null,"link preload"),s("。")],-1),E={id:"link-preload",tabindex:"-1"},L={class:"header-anchor",href:"#link-preload"},O={href:"https://html.spec.whatwg.org/multipage/links.html#link-type-preload",target:"_blank",rel:"noopener noreferrer"},Y=n("p",null,[s("我们知道 "),n("code",null,"<link>"),s(" 通常是用来加载样式资源的，不过 "),n("code",null,"<link>"),s("  也加入了一些新的有意思的性能和安全特性，这里的 "),n("strong",null,"preload"),s(" 就是其一。")],-1),R=n("code",null,"<img>",-1),V=n("code",null,"@font-face",-1),A=n("code",null,"font-family",-1),B={href:"https://web.dev/articles/critical-rendering-path?spm=5176.28103460.0.0.74fb3f99KEeKuS&hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},D=n("p",null,"对此我们可以考虑到，如果能尽快的加载这部分资源，再依赖其他比如加 loading 状态等手段，就可以给到用户更好的体验。",-1),G={href:"https://html.spec.whatwg.org/multipage/links.html#link-type-preload",target:"_blank",rel:"noopener noreferrer"},J={href:"https://web.dev/articles/codelab-preload-web-fonts?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},S=e(`<p>为什么切换字体这里我会提到预加载呢。因为我在一开始遇到需要按需加载字体，但是由于字体文件过大等待好几秒的问题而想优化时，看到了预加载的方案。当时是有考虑直接在 <code>&lt;head&gt;</code> 中将对应字体资源直接通过 <code>link preload</code> 写进去的，但是考虑到将来可能会增加更多的字体资源，可能会导致一开始加载的资源过多了。后来也有想法是在打开字体选择框的时候动态插入 <code>&lt;link&gt;</code> 预加载字体文件，类似这种：</p><div class="language-tsx line-numbers-mode" data-ext="tsx" data-title="tsx"><pre class="language-tsx"><code><span class="token keyword">function</span> <span class="token function">preloadFont</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  link<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">&#39;preload&#39;</span><span class="token punctuation">;</span>
  link<span class="token punctuation">.</span>as <span class="token operator">=</span> <span class="token string">&#39;font&#39;</span><span class="token punctuation">;</span>
  link<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
  link<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),I={href:"https://github.com/bramstein/fontfaceobserver",target:"_blank",rel:"noopener noreferrer"};function K(P,U){const t=o("ExternalLinkIcon"),p=o("RouteLink");return c(),i("div",null,[d,n("p",null,[s("地址："),n("a",k,[s("https://typing.yasinchan.com"),a(t)])]),n("p",null,[s("源码："),n("a",h,[s("https://github.com/YasinChan/typing"),a(t)])]),m,g,n("p",null,[s("正如"),a(p,{to:"/post/typing-intr.html"},{default:r(()=>[s("前文")]),_:1}),s("所言，本站是个文字为主的站点，所以对于文字本身可以做更多的定制，字体则是其中一个可以改变的点。")]),f,n("ul",null,[n("li",null,[n("a",_,[s("free-font"),a(t)])]),n("li",null,[n("a",b,[s("Google Fonts"),a(t)])]),n("li",null,[n("a",v,[s("得意黑"),a(t)])]),n("li",null,[n("a",y,[s("阿里巴巴普惠体"),a(t)])])]),w,n("p",null,[s("参考 w3c 文档对 "),n("a",x,[s("Font loading guidelines"),a(t)]),s(" 的定义，只有在 "),F,s(" 被使用时才会被加载")]),C,n("p",null,[s("不过由于字体文件一般都比较大，在第一次加载时都会比较久，甚至会有数秒的加载时长，对于用户而言，在这数秒内观感上会觉得没有加载出来。为此，我这里引入了一个用于监听字体文件加载完成的组件库 "),n("a",q,[s("FontFaceObserver"),a(t)]),s(" ，用于在点击设置字体后动态加载字体文件时，起到监听文件是否加载成功的作用")]),M,n("p",null,[s("默认是 3 秒超时，而由于字体文件过大或者 CDN 供应商不给力的原因可能导致加载时间会更长超过 3 秒，所以我这里暂时设置为 8 秒，具体可以查看"),n("a",N,[s("我的源码"),a(t)]),s("。")]),n("p",null,[s("另外如上图，在选择字体弹框里是有个预览字体样式的，如果说当需要预览的时候加载所有完整的字体文件也会有所浪费，所以我这里使用了 "),n("a",T,[s("fontmin"),a(t)]),s(" 工具，用于按需加载字体文件。使用该工具可以将所需要的字符从字体文件中单独打包出来形成一个很小的文件。放到我这里预览的场景，只需要入土中的几个单独的字符。举例来讲，在使用 fontmin 工具之后，可以将 7.2M 的文件减少到只有 6.4k，极大的节约了资源加载。")]),z,n("h3",E,[n("a",L,[n("span",null,[n("a",O,[s("link preload"),a(t)])])])]),Y,n("p",null,[s("我们知道浏览器在渲染时，当加载到 "),R,s(" 标签时才会加载其中的图片资源，就像上面提到的 "),V,s(" ，只有当定义的 "),A,s(" 被使用时才会加载其对应的字体资源。基于"),n("a",B,[s("浏览器的工作原理"),a(t)]),s("，这意味着这些资源只有当执行到对应位置才会加载所需资源，从用户层面讲，视觉上就是图片资源滞后加载或者字体会跳一下加载。")]),D,n("p",null,[n("a",G,[s("link preload"),a(t)]),s(" 就是做这个“尽快”加载的作用的。利用 link preload 可以将需要提前加载的资源放到 head 里面靠上的位置，即可以起到预加载的作用。再结合浏览器缓存，当 Dom 中使用到这些预加载的资源时，就可以从缓存中拿到。顺便提一下单从字体文件角度而言，如果不是我这里特殊的按需加载的需求，而是全局的正常加载字体文件的需求时，也是需要尽快加载到字体文件的，包括在 "),n("a",J,[s("web.dev"),a(t)]),s(" 也是提到这一点。")]),S,n("p",null,[s("不过发现用户在打开字体选择框到点击字体设置的时间可能只有几秒，是无法将几十 M 的资源都加载出来的，还是会出现选择了一个字体资源后等待多秒才加载出来的情况，最终选择了上面 "),n("a",I,[s("FontFaceObserver"),a(t)]),s(" 的方案。")])])}const H=l(u,[["render",K],["__file","typing-change-font.html.vue"]]),Z=JSON.parse('{"path":"/post/typing-change-font.html","title":"Typing 项目技术总结 - 通用模块（字体切换系列）","lang":"zh-CN","frontmatter":{"date":"2024-03-24T00:00:00.000Z","head":[["meta",{"name":"keywords","content":"typing, 主题, theme"}],["meta",{"name":"description","content":"https://typing.yasinchan.com/ 主题切换介绍"}]],"tag":["typing","link preload","FontFaceObserver","font-family","fontmin"],"sticky":true,"excerpt":"<p>打字网站 <a href=\\"https://typing.yasinchan.com\\" target=\\"_blank\\">Typing</a> 字体切换逻辑介绍</p>"},"headers":[{"level":2,"title":"切换字体","slug":"切换字体","link":"#切换字体","children":[{"level":3,"title":"link preload","slug":"link-preload","link":"#link-preload","children":[]}]}],"git":{"updatedTime":1711364703000,"contributors":[{"name":"YasinChan","email":"yasinchan2016@gmail.com","commits":1},{"name":"yasinchan","email":"yasinchan2016@gmail.com","commits":1}]},"filePathRelative":"post/typing-change-font.md"}');export{H as comp,Z as data};
